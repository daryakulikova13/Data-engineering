#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct 13 21:47:07 2025

@author: dasha
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

print("=" * 60)
print("EDA-–∞–Ω–∞–ª–∏–∑: –±–µ–ª–∫–∏ Pseudomonas aeruginosa")
print("=" * 60)
print("\n" + "="*60)
print("1. –í–≤–µ–¥–µ–Ω–∏–µ")
print("="*60)
print("–ê–Ω–∞–ª–∏–∑ –±–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –±–µ–ª–∫–æ–≤ –±–∞–∫—Ç–µ—Ä–∏–∏ Pseudomonas aeruginosa.")
print("–¶–µ–ª—å: –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã—è–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏.")
print("\n" + "="*60)
print("2. –ó–ê–ì–†–£–ó–ö–ê –ò –ü–ï–†–í–ò–ß–ù–´–ô –û–°–ú–û–¢–†")
print("="*60)

data = pd.read_csv('/home/dasha/Desktop/Data-engineering_project/pseudomonas_aeruginosa.csv')  
print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ 'pseudomonas_aeruginosa.csv'")

print(f"üìä –†–∞–∑–º–µ—Ä –¥–∞—Ç–∞—Å–µ—Ç–∞: {data.shape}")
print(f"üìä –ö–æ–ª–æ–Ω–∫–∏: {list(data.columns)}")

print("\n" + "="*60)
print("3. –û–¶–ï–ù–ö–ê –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•")
print("="*60)

print("\n–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:")
print(data.dtypes)

print("\n–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:")
print(data.head())

missing_data = data.isnull().sum()
missing_percent = (missing_data / len(data)) * 100

missing_info = pd.DataFrame({
    '–ü—Ä–æ–ø—É—Å–∫–æ–≤': missing_data,
    '–ü—Ä–æ—Ü–µ–Ω—Ç': missing_percent
})

print("–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:")
print(missing_info[missing_info['–ü—Ä–æ–ø—É—Å–∫–æ–≤'] > 0])

if missing_data.sum() > 0:
    plt.figure(figsize=(10, 4))
    missing_data[missing_data > 0].plot(kind='bar', color='coral')
    plt.title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π')
    plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤')
    plt.xticks(rotation=45)
    plt.tight_layout() 
    plt.show()
    
print("\n" + "="*60)
print("5. –ê–ù–ê–õ–ò–ó –í–´–ë–†–û–°–û–í –ò –ê–ù–û–ú–ê–õ–ò–ô")
print("="*60)

numeric_cols = data.select_dtypes(include=[np.number]).columns

if len(numeric_cols) > 0:
    print(f"–ß–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {list(numeric_cols)}")

    print("\nüìà –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(data[numeric_cols].describe())
    
    print("\nüîç –í—ã–±—Ä–æ—Å—ã (–ø–æ –ø—Ä–∞–≤–∏–ª—É 1.5*IQR):")
    for col in numeric_cols:
        Q1 = data[col].quantile(0.25)
        Q3 = data[col].quantile(0.75)
        IQR = Q3 - Q1
        lower_bound = Q1 - 1.5 * IQR
        upper_bound = Q3 + 1.5 * IQR
        
        outliers = data[(data[col] < lower_bound) | (data[col] > upper_bound)]
        print(f"‚Ä¢ {col}: {len(outliers)} –≤—ã–±—Ä–æ—Å–æ–≤ ({len(outliers)/len(data)*100:.1f}%)")

    if len(numeric_cols) > 0:
        fig, axes = plt.subplots(2, 2, figsize=(12, 8))
        axes = axes.ravel()
        
        for i, col in enumerate(numeric_cols[:4]):
            data[col].hist(bins=30, ax=axes[i], alpha=0.7, color='skyblue')
            axes[i].set_title(f'–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ {col}')
            axes[i].set_xlabel(col)
            axes[i].set_ylabel('–ß–∞—Å—Ç–æ—Ç–∞')
        
        plt.tight_layout()
        plt.show()

print("\n" + "="*60)
print("6. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ò –í–´–í–û–î–´")
print("="*60)
print("–û–ë–©–ò–ï –í–´–í–û–î–´:")
print(f"‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(data)} –±–µ–ª–∫–æ–≤")
print(f"‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {missing_data.sum()} ‚úÖ")  # –ë—É–¥–µ—Ç 0
print(f"‚Ä¢ –ß–∏—Å–ª–æ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {len(numeric_cols)}")
print(f"‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –û–¢–õ–ò–ß–ù–û–ï (–ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç)")
print("\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
print("- –î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
if len(numeric_cols) > 0:
    print("- –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É")
print("- –ú–æ–∂–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –±–µ–ª–∫–æ–≤")